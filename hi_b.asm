pop.32 [stream_ptr]
pop.32 [arg_0]
pop.32 [arg_1]
pop.32 [arg_2]
pop.32 [arg_3]
mov.32 r3, 0
mov.32 temp_ch, 0
mov.32 r5, 1
add.32 r3, 1
mov.32 r5, 2
add.32 r3, 1
mov.32 r5, 3
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 4
sub.32 r3, 1
mov.32 r5, 5
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 6
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 7
mov.32 r4, mem
add.32 r4, r3
cmp.8 0, [r4]
ifzjmp loop_end_0
loop_start_0:
mov.32 r5, 8
mov.32 r4, mem
add.32 r4, r3
cmp.8 0, [r4]
ifzjmp loop_end_1
loop_start_1:
mov.32 r5, 9
sub.32 r3, 1
mov.32 r5, 10
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 11
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 12
add.32 r3, 1
mov.32 r5, 13
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 14
add.32 r3, 1
mov.32 r5, 15
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 16
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 17
add.32 r3, 1
mov.32 r5, 18
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 19
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 20
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 21
add.32 r3, 1
mov.32 r5, 22
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 23
sub.32 r3, 1
mov.32 r5, 24
sub.32 r3, 1
mov.32 r5, 25
sub.32 r3, 1
mov.32 r5, 26
mov.32 r4, mem
add.32 r4, r3
cmp.8 0, [r4]
ifnzjmp loop_start_1
loop_end_1:
mov.32 r5, 27
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 28
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 29
add.32 r3, 1
mov.32 r5, 30
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 31
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 32
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 33
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 34
mov.32 r4, mem
add.32 r4, r3
cmp.8 0, [r4]
ifnzjmp loop_start_0
loop_end_0:
mov.32 r5, 35
sub.32 r3, 1
mov.32 r5, 36
sub.32 r3, 1
mov.32 r5, 37
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
mov.32 r5, 38
sub.32 r3, 1
mov.32 r5, 39
sub.32 r3, 1
mov.32 r5, 40
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 41
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
mov.32 r5, 42
sub.32 r3, 1
mov.32 r5, 43
sub.32 r3, 1
mov.32 r5, 44
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
mov.32 r5, 45
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
mov.32 r5, 46
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 47
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 48
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 49
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
call yield_task
mov.32 r5, 50
add.32 r3, 1
mov.32 r5, 51
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
mov.32 r5, 52
sub.32 r3, 1
mov.32 r5, 53
sub.32 r3, 1
mov.32 r5, 54
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 55
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
mov.32 r5, 56
add.32 r3, 1
mov.32 r5, 57
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
mov.32 r5, 58
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 59
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 60
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 61
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
mov.32 r5, 62
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 63
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 64
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 65
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 66
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 67
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 68
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
mov.32 r5, 69
add.32 r3, 1
mov.32 r5, 70
add.32 r3, 1
mov.32 r5, 71
mov.32 r4, mem
add.32 r4, r3
sub.8 [r4], 1
mov.32 r5, 72
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
mov.32 r5, 73
sub.32 r3, 1
mov.32 r5, 74
mov.32 r4, mem
add.32 r4, r3
add.8 [r4], 1
mov.32 r5, 75
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
mov.32 r5, 76
add.32 r3, 1
mov.32 r5, 77
add.32 r3, 1
mov.32 r5, 78
mov.32 r4, mem
add.32 r4, r3
mov.8 [temp_ch], r4
mov.32 r2, temp_ch
mov.32 r0, 1
mov.32 r1, [stream_ptr]
call write
mov.32 r5, 79
call end_current_task

stream_ptr: data.32 0
arg_0: data.32 0
arg_1: data.32 0
arg_2: data.32 0
arg_3: data.32 0
temp_ch: data.8 0
mem: data.fill 0, 30000
#include "./fox32rom/fox32rom.def"
#include "./fox32os/fox32os.def"

